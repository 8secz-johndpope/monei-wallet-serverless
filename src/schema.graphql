type Transactions {
    items: [Transaction!]!
    total: Int
}

type Transaction {
    id: String!
    createdAt: Long!
    updatedAt: Long!
    from: String!
    to: String!
    status: String!
    amount: Int!
    fromInfo: String
    toInfo: String
    note: String
    income: Boolean
}

type Checkout {
    checkoutUrl: String!
}

type BankAccountDetails {
    legalType: String!
    accountNumber: String!
    IBAN: String!
    BIC: String
}

type BankAccount {
    id: String!
    accountHolderName: String!
    currency: String!
    country: String!
    type: String!
    details: BankAccountDetails!
}

type Query {
    balance: Int!
    transactions(size: Int, from: Int): Transactions
}

type Mutation {
    newTransaction(
        amount: Int!
        ethAddress: String
        phoneNumber: String
        email: String
        note: String
    ): Transaction!
    prepareCheckout(amount: Int!): Checkout!
}

schema {
    query: Query
    mutation: Mutation
}
